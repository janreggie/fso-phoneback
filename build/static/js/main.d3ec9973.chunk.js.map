{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["BASE_URL","exportedObject","getAll","axios","get","then","response","data","catch","error","addEntry","person","post","changeEntry","id","put","deleteEntry","delete","MessageOrNone","message","cN","className","Notice","Error","Filter","searchFor","setSearchFor","value","onChange","e","target","EntryForm","persons","setPersons","setNotice","setError","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","newPerson","name","number","foundPerson","find","window","confirm","personData","returnedEntry","map","concat","type","Persons","onlyDisplay","filter","toLocaleLowerCase","includes","allPersons","Person","onClick","_","pp","App","notice","useEffect","transientNotice","setTimeout","transientError","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3ec9973.chunk.js","sourcesContent":["import axios from \"axios\"\n\nconst BASE_URL = '/api/persons'\n\n/** getAll returns a promise that resolves to a list of persons */\nconst getAll = () => axios.get(BASE_URL)\n  .then(response => response.data)\n  .catch(error => {\n    if (error.response) {\n      throw error.response.data.error\n    }\n  })\n\n/** addEntry returns a promise that resolves to the person who has just been added */\nconst addEntry = (person) => axios.post(BASE_URL, person)\n  .then(response => response.data)\n  .catch(error => {\n    if (error.response) {\n      throw error.response.data.error\n    }\n  })\n\n/** changeEntry changes the entry of a given ID to person */\nconst changeEntry = (id, person) => axios.put(BASE_URL + \"/\" + id, person)\n  .then(response => response.data)\n  .catch(error => { \n    if (error.response) {\n      throw error.response.data.error\n    }\n  })\n\n/** deleteEntry delets a person with a particular ID */\nconst deleteEntry = (id) => axios.delete(BASE_URL + \"/\" + id)\n  .then(response => response.data)\n  .catch(error => { \n    if (error.response) {\n      throw error.response.data.error\n    }\n  })\n\nconst exportedObject = { getAll, addEntry, changeEntry, deleteEntry }\n\nexport default exportedObject\n","import React, { useEffect, useState } from 'react'\nimport personData from './services/persons'\nimport './App.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [searchFor, setSearchFor] = useState('')\n  const [notice, setNotice] = useState('')\n  const [error, setError] = useState('')\n\n  useEffect(() => personData.getAll().then(persons => setPersons([...persons, {name: 'Rogue Rougeson', id: 1001, number: '303 444944949 '}])), [])\n\n  const transientNotice = (message) => {\n    setNotice(message)\n    setTimeout(() => setNotice(''), 5000)\n  }\n  const transientError = (message) => {\n    setError(message)\n    setTimeout(() => setError(''), 5000)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notice message={notice} />\n      <Error message={error} />\n      <Filter searchFor={searchFor} setSearchFor={setSearchFor} />\n\n      <h3>add a new</h3>\n      <EntryForm persons={persons} setPersons={setPersons} setNotice={transientNotice} setError={transientError} />\n\n      <h3>Numbers</h3>\n      <Persons persons={persons} setPersons={setPersons} searchFor={searchFor} setNotice={transientNotice} setError={transientError} />\n    </div>\n  )\n}\n\n/** \n * MessageOrNone returns a div of some className containing message if it exists.\n * Otherwise, return null.\n */\nconst MessageOrNone = ({ message, cN }) => {\n  if (!message) {\n    return null\n  }\n\n  return (\n    <div className={cN}>\n      {message}\n    </div>\n  )\n}\n\nconst Notice = ({ message }) => <MessageOrNone message={message} cN='notice' />\nconst Error = ({ message }) => <MessageOrNone message={message} cN='error' />\n\n/** Filter sets what to filter for */\nconst Filter = ({ searchFor, setSearchFor }) => (\n  <div>\n    filter shown with <input value={searchFor} onChange={(e) => setSearchFor(e.target.value)} />\n  </div>\n)\n\n/** EntryForm submits entries */\nconst EntryForm = ({ persons, setPersons, setNotice, setError }) => {\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n\n  /** submitEntry handles submission of Phonebook form.\n   * \n   * @param event {React.FormEvent<HTMLFormElement>}\n   */\n  const submit = (event) => {\n    event.preventDefault()\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    const foundPerson = persons.find(person => person.name === newPerson.name)\n    if (!!foundPerson) {\n      const toUpdate = window.confirm(`${newPerson.name} is already in phonebook. Replace the old number with the new one?`)\n      if (!toUpdate) {\n        return\n      }\n\n      personData.changeEntry(foundPerson.id, newPerson)\n        .then(returnedEntry => {\n          setPersons(persons.map(person => person.name === returnedEntry.name ? returnedEntry : person))\n          setNewName('')\n          setNewNumber('')\n          setNotice(`Modified ${returnedEntry.name}`)\n        })\n        .catch(error => setError(error))\n\n      return\n    }\n\n    personData.addEntry(newPerson)\n      .then(returnedEntry => {\n        setPersons(persons.concat(returnedEntry))\n        setNewName('')\n        setNewNumber('')\n        setNotice(`Added ${returnedEntry.name}`)\n      })\n      .catch(error => setError(error))\n  }\n\n  return (\n    <form onSubmit={submit}>\n      <div>\n        name: <input value={newName} onChange={(e) => setNewName(e.target.value)} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={(e) => setNewNumber(e.target.value)} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\n/** \n * Persons displays persons that contain the string searchFor.\n * Ignore case.\n */\nconst Persons = ({ persons, setPersons, searchFor, setNotice, setError }) => {\n  const onlyDisplay = persons.filter(person => person.name.toLocaleLowerCase().includes(searchFor))\n\n  return (\n    <div>\n      {onlyDisplay.map(\n        person => // They should teach us Redux soon...\n          <Person key={person.id} allPersons={persons} person={person} setPersons={setPersons} setNotice={setNotice} setError={setError} />\n      )}\n    </div>\n  )\n}\n\n/**\n * Person displays a person.\n * allPersons and setPersons are passed here to allow modification if an entry were deleted.\n */\nconst Person = ({ person, allPersons, setPersons, setNotice, setError }) => {\n  const handleDelete = () => {\n    const toDelete = window.confirm(`Delete ${person.name}?`)\n    if (!toDelete) {\n      return\n    }\n\n    personData.deleteEntry(person.id)\n      .then(_ => setNotice(`${person.name} has been deleted`))\n      .catch(_ => setError(`${person.name} has already been deleted from the server`))\n    setPersons(allPersons.filter(pp => pp.id !== person.id))\n  }\n\n  return (\n    <div>\n      {person.name} {person.number} <button onClick={handleDelete}>delete</button>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}