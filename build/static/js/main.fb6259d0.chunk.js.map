{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["BASE_URL","exportedObject","getAll","axios","get","then","response","data","addEntry","person","post","changeEntry","id","put","deleteEntry","delete","MessageOrNone","message","cN","className","Notice","Error","Filter","searchFor","setSearchFor","value","onChange","e","target","EntryForm","persons","setPersons","setNotice","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","newPerson","name","number","foundPerson","find","window","confirm","personData","returnedEntry","map","concat","type","Persons","setError","onlyDisplay","filter","toLocaleLowerCase","includes","allPersons","Person","onClick","_","catch","pp","App","notice","error","useEffect","transientNotice","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb6259d0.chunk.js","sourcesContent":["import axios from \"axios\"\n\nconst BASE_URL = '/api/persons'\n\n/** getAll returns a promise that resolves to a list of persons */\nconst getAll = () => axios.get(BASE_URL).then(response => response.data)\n\n/** addEntry returns a promise that resolves to the person who has just been added */\nconst addEntry = (person) => axios.post(BASE_URL, person).then(response => response.data)\n\n/** changeEntry changes the entry of a given ID to person */\nconst changeEntry = (id, person) => axios.put(BASE_URL + \"/\" + id, person).then(response => response.data)\n\n/** deleteEntry delets a person with a particular ID */\nconst deleteEntry = (id) => axios.delete(BASE_URL + \"/\" + id)\n\nconst exportedObject = { getAll, addEntry, changeEntry, deleteEntry }\n\nexport default exportedObject\n","import React, { useEffect, useState } from 'react'\nimport personData from './services/persons'\nimport './App.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [searchFor, setSearchFor] = useState('')\n  const [notice, setNotice] = useState('')\n  const [error, setError] = useState('')\n\n  useEffect(() => personData.getAll().then(persons => setPersons([...persons, {name: 'Rogue Rougeson', id: 1001, number: '303 444944949 '}])), [])\n\n  const transientNotice = (message) => {\n    setNotice(message)\n    setTimeout(() => setNotice(''), 5000)\n  }\n  const transientError = (message) => {\n    setError(message)\n    setTimeout(() => setError(''), 5000)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notice message={notice} />\n      <Error message={error} />\n      <Filter searchFor={searchFor} setSearchFor={setSearchFor} />\n\n      <h3>add a new</h3>\n      <EntryForm persons={persons} setPersons={setPersons} setNotice={transientNotice} />\n\n      <h3>Numbers</h3>\n      <Persons persons={persons} setPersons={setPersons} searchFor={searchFor} setNotice={transientNotice} setError={transientError} />\n    </div>\n  )\n}\n\n/** \n * MessageOrNone returns a div of some className containing message if it exists.\n * Otherwise, return null.\n */\nconst MessageOrNone = ({ message, cN }) => {\n  if (!message) {\n    return null\n  }\n\n  return (\n    <div className={cN}>\n      {message}\n    </div>\n  )\n}\n\nconst Notice = ({ message }) => <MessageOrNone message={message} cN='notice' />\nconst Error = ({ message }) => <MessageOrNone message={message} cN='error' />\n\n/** Filter sets what to filter for */\nconst Filter = ({ searchFor, setSearchFor }) => (\n  <div>\n    filter shown with <input value={searchFor} onChange={(e) => setSearchFor(e.target.value)} />\n  </div>\n)\n\n/** EntryForm submits entries */\nconst EntryForm = ({ persons, setPersons, setNotice }) => {\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n\n  /** submitEntry handles submission of Phonebook form.\n   * \n   * @param event {React.FormEvent<HTMLFormElement>}\n   */\n  const submit = (event) => {\n    event.preventDefault()\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    const foundPerson = persons.find(person => person.name === newPerson.name)\n    if (!!foundPerson) {\n      const toUpdate = window.confirm(`${newPerson.name} is already in phonebook. Replace the old number with the new one?`)\n      if (!toUpdate) {\n        return\n      }\n\n      personData.changeEntry(foundPerson.id, newPerson)\n        .then(returnedEntry => {\n          setPersons(persons.map(person => person.name === returnedEntry.name ? returnedEntry : person))\n          setNewName('')\n          setNewNumber('')\n          setNotice(`Modified ${returnedEntry.name}`)\n        })\n\n      return\n    }\n\n    personData.addEntry(newPerson)\n      .then(returnedEntry => {\n        setPersons(persons.concat(returnedEntry))\n        setNewName('')\n        setNewNumber('')\n        setNotice(`Added ${returnedEntry.name}`)\n      })\n  }\n\n  return (\n    <form onSubmit={submit}>\n      <div>\n        name: <input value={newName} onChange={(e) => setNewName(e.target.value)} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={(e) => setNewNumber(e.target.value)} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\n/** \n * Persons displays persons that contain the string searchFor.\n * Ignore case.\n */\nconst Persons = ({ persons, setPersons, searchFor, setNotice, setError }) => {\n  const onlyDisplay = persons.filter(person => person.name.toLocaleLowerCase().includes(searchFor))\n\n  return (\n    <div>\n      {onlyDisplay.map(\n        person => // They should teach us Redux soon...\n          <Person key={person.id} allPersons={persons} person={person} setPersons={setPersons} setNotice={setNotice} setError={setError} />\n      )}\n    </div>\n  )\n}\n\n/**\n * Person displays a person.\n * allPersons and setPersons are passed here to allow modification if an entry were deleted.\n */\nconst Person = ({ person, allPersons, setPersons, setNotice, setError }) => {\n  const handleDelete = () => {\n    const toDelete = window.confirm(`Delete ${person.name}?`)\n    if (!toDelete) {\n      return\n    }\n\n    personData.deleteEntry(person.id)\n      .then(_ => setNotice(`${person.name} has been deleted`))\n      .catch(_ => setError(`${person.name} has already been deleted from the server`))\n    setPersons(allPersons.filter(pp => pp.id !== person.id))\n  }\n\n  return (\n    <div>\n      {person.name} {person.number} <button onClick={handleDelete}>delete</button>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}